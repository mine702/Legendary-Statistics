# -------- server 밖(http 컨텍스트) --------
# 봇 식별
map $http_user_agent $is_bot {
  default 0;
  "~*AdsBot-Google|Googlebot|bingbot|DuckDuckBot" 1;
}

# 봇이면 @prerender, 아니면 SPA index.html
map $is_bot $fallback {
  1 @prerender;
  0 /index.html;
}

# Rendertron 업스트림 (docker-compose 서비스명)
upstream prerender { server rendertron:3000; }

# -------- 서버 블록 --------
server {
  listen 3000;

  # 루트는 서버에서 바로 /home 으로 이동(봇·사용자 공통)
  location = / {
    return 301 https://$host/home;
  }

  location /uploads/ {
    alias /uploads/;
    autoindex on;
  }

  # 공용 진입점: 파일/디렉터리 없으면 $fallback으로
  # (봇이면 @prerender, 사람이면 /index.html)
  location / {
    root  /usr/share/nginx/html;
    index index.html index.htm;
    try_files $uri $uri/ $fallback;
  }

  # 프리렌더 처리
  location @prerender {
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Host  $host;
    proxy_pass http://prerender/render/$scheme://$host$request_uri;
  }

  # API 프록시
  location /api/ {
    proxy_pass http://backend:8080;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }
}
